---
- name: Script İndir ve Çalıştır (Direkt PVC'ye Yaz)
  hosts: localhost
  gather_facts: no  # Hız için facts toplama kapalı
  vars:
    input1: "{{ input1 | default('input1_varsayılan') }}"
    input2: "{{ input2 | default('input2_varsayılan') }}"

  tasks:
    # 1. Script'i GitHub'dan indir (PVC içine)
    - name: Scripti indir
      ansible.builtin.shell:
        cmd: curl -sS -O https://raw.githubusercontent.com/testv1c/awxscript/main/awx_script.sh
        chdir: /var/lib/awx/projects  # Komutun bu dizinde çalışmasını sağla
      register: download_result
      failed_when: download_result.rc != 0  # Hata kontrolü

    # 2. Script'e çalıştırma izni ver
    - name: Script izinlerini ayarla
      ansible.builtin.file:
        path: /var/lib/awx/projects/awx_script.sh
        mode: '0755'
      when: download_result.rc == 0

    # 3. Script'i çalıştır (Output direkt PVC'ye yazılacak)
    - name: Scripti çalıştır
      ansible.builtin.shell:
        cmd: ./awx_script.sh "{{ input1 }}" "{{ input2 }}"
        chdir: /var/lib/awx/projects  # Komutun bu dizinde çalışmasını sağla
      when: download_result.rc == 0
      register: script_output

    # 4. Çıktı dosyasını kontrol et
    - name: Çıktı dosyasını oku
      ansible.builtin.command:
        cmd: cat /var/lib/awx/projects/script_output.txt
      register: output_content
      changed_when: false  # Bu task'ın "changed" olarak işaretlenmesini engelle

    # 5. Sonuçları göster
    - name: Script çıktısı
      ansible.builtin.debug:
        msg: "{{ script_output.stdout }}"
    - name: Dosya içeriği
      ansible.builtin.debug:
        msg: "{{ output_content.stdout_lines }}"
